openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: 'Hello world!'
      tags:
        - App

  /user:
    get:
      operationId: UserController_getAllUsers
      parameters: []
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    login:
                      type: string
                    password:
                      type: string
                    id:
                      type: string
                      format: uuid
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    version:
                      type: integer
        '400':
          description: Invalid request
      tags:
        - Users
    post:
      operationId: UserController_createUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                  password:
                    type: string
                  id:
                    type: string
                    format: uuid
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  version:
                    type: integer
        '400':
          description: Invalid user data or missing required fields
      tags:
        - Users

  /user/{id}:
    get:
      operationId: UserController_getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                  password:
                    type: string
                  id:
                    type: string
                    format: uuid
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  version:
                    type: integer
        '400':
          description: Invalid user ID format (not UUID)
        '404':
          description: User not found
      tags:
        - Users
    put:
      operationId: UserController_updateUserPassword
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordDto'
      responses:
        '200':
          description: User password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                  password:
                    type: string
                  id:
                    type: string
                    format: uuid
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  version:
                    type: integer
        '400':
          description: Invalid request or user ID format (not UUID)
        '403':
          description: Incorrect old password
        '404':
          description: User not found
      tags:
        - Users
    delete:
      operationId: UserController_deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: User deleted successfully
        '400':
          description: Invalid user ID format (not UUID)
        '404':
          description: User not found
      tags:
        - Users

  /artist:
    get:
      operationId: ArtistController_getAllArtists
      parameters: []
      responses:
        '200':
          description: Artists retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    grammy:
                      type: boolean
                    id:
                      type: string
                      format: uuid
        '400':
          description: Invalid request
      tags:
        - Artists
    post:
      operationId: ArtistController_createArtist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: Artist created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  grammy:
                    type: boolean
                  id:
                    type: string
                    format: uuid
        '400':
          description: Invalid artist data or missing required fields
      tags:
        - Artists

  /artist/{id}:
    get:
      operationId: ArtistController_getArtistById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Artist retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  grammy:
                    type: boolean
                  id:
                    type: string
                    format: uuid
        '400':
          description: Invalid artist ID format (not UUID)
        '404':
          description: Artist not found
      tags:
        - Artists
    put:
      operationId: ArtistController_updateArtist
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: Artist updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  grammy:
                    type: boolean
                  id:
                    type: string
                    format: uuid
        '400':
          description: Invalid artist data or artist ID format (not UUID)
        '404':
          description: Artist not found
      tags:
        - Artists
    delete:
      operationId: ArtistController_deleteArtist
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Artist deleted successfully
        '400':
          description: Invalid artist ID format (not UUID)
        '404':
          description: Artist not found
      tags:
        - Artists

  /album:
    get:
      operationId: AlbumController_getAllAlbums
      parameters: []
      responses:
        '200':
          description: Albums retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    year:
                      type: integer
                    artistId:
                      type: string
                      format: uuid
        '400':
          description: Invalid request
      tags:
        - Albums
    post:
      operationId: AlbumController_createAlbum
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: Album created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  year:
                    type: integer
                  artistId:
                    type: string
                    format: uuid
        '400':
          description: Invalid album data or missing required fields
      tags:
        - Albums

  /album/{id}:
    get:
      operationId: AlbumController_getAlbumById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Album retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  year:
                    type: integer
                  artistId:
                    type: string
                    format: uuid
        '400':
          description: Invalid album ID format (not UUID)
        '404':
          description: Album not found
      tags:
        - Albums
    put:
      operationId: AlbumController_updateAlbum
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: Album updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  year:
                    type: integer
                  artistId:
                    type: string
                    format: uuid
        '400':
          description: Invalid album ID or data
        '404':
          description: Album not found
      tags:
        - Albums
    delete:
      operationId: AlbumController_deleteAlbum
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Album deleted successfully
        '400':
          description: Invalid album ID format (not UUID)
        '404':
          description: Album not found
      tags:
        - Albums

  /track:
    get:
      operationId: TrackController_getAllTracks
      parameters: []
      responses:
        '200':
          description: Tracks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    artistId:
                      type: string
                      format: uuid
                    albumId:
                      type: string
                      format: uuid
                    duration:
                      type: integer
        '400':
          description: Invalid request
      tags:
        - Tracks
    post:
      operationId: TrackController_createTrack
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: Track created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  artistId:
                    type: string
                    format: uuid
                  albumId:
                    type: string
                    format: uuid
                  duration:
                    type: integer
        '400':
          description: Invalid track data or missing required fields
      tags:
        - Tracks

  /track/{id}:
    get:
      operationId: TrackController_getTrackById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Track retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  artistId:
                    type: string
                    format: uuid
                  albumId:
                    type: string
                    format: uuid
                  duration:
                    type: integer
        '400':
          description: Invalid track ID format (not UUID)
        '404':
          description: Track not found
      tags:
        - Tracks
    put:
      operationId: TrackController_updateTrack
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: Track updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  artistId:
                    type: string
                    format: uuid
                  albumId:
                    type: string
                    format: uuid
                  duration:
                    type: integer
        '400':
          description: Invalid track ID or data
        '404':
          description: Track not found
      tags:
        - Tracks
    delete:
      operationId: TrackController_deleteTrack
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Track deleted successfully
        '400':
          description: Invalid track ID format (not UUID)
        '404':
          description: Track not found
      tags:
        - Tracks

  /favs:
    get:
      operationId: FavoritesController_getAllFavorites
      parameters: []
      responses:
        '200':
          description: Successfully retrieved all favorites
          content:
            application/json:
              schema:
                type: object
                properties:
                  artists:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                  albums:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        title:
                          type: string
                  tracks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
        '400':
          description: Invalid request
      tags:
        - Favorites

  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrackToFavorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Track added to favorites successfully
        '400':
          description: Invalid track ID format (not UUID)
        '422':
          description: Track not found
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_deleteTrackFromFavorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Track removed from favorites
        '400':
          description: Invalid track ID format (not UUID)
        '404':
          description: Track not in favorites
      tags:
        - Favorites

  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbumToFavorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Album added to favorites successfully
        '400':
          description: Invalid album ID format (not UUID)
        '422':
          description: Album not found
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_deleteAlbumFromFavorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Album removed from favorites
        '400':
          description: Invalid album ID format (not UUID)
        '404':
          description: Album not in favorites
      tags:
        - Favorites

  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtistToFavorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Artist added to favorites successfully
        '400':
          description: Invalid artist ID format (not UUID)
        '422':
          description: Artist not found
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_deleteArtistFromFavorites
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Artist removed from favorites
        '400':
          description: Invalid artist ID format (not UUID)
        '404':
          description: Artist not in favorites
      tags:
        - Favorites

components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: User's login (must be a non-empty string)
        password:
          type: string
          description: User's password (must be a non-empty string)
      required:
        - login
        - password

    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
          description: The user's old password (must be a non-empty string)
        newPassword:
          type: string
          description: The user's new password (must be a non-empty string)
      required:
        - oldPassword
        - newPassword

    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the artist
        grammy:
          type: boolean
          description: Whether the artist has won a Grammy
      required:
        - name
        - grammy

    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the artist
        grammy:
          type: boolean
          description: Whether the artist has won a Grammy
      required:
        - name
        - grammy

    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the album
        year:
          type: integer
          description: Year of release
        artistId:
          type: string
          format: uuid
          description: ID of the artist (nullable)
      required:
        - name
        - year

    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the album
        year:
          type: integer
          description: Year of release
        artistId:
          type: string
          format: uuid
          description: ID of the artist (nullable)
      required:
        - name
        - year

    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the track
        artistId:
          type: string
          format: uuid
          description: ID of the artist (nullable)
        albumId:
          type: string
          format: uuid
          description: ID of the album (nullable)
        duration:
          type: integer
          description: Duration of the track in seconds
      required:
        - name
        - duration

    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the track
        artistId:
          type: string
          format: uuid
          description: ID of the artist (nullable)
        albumId:
          type: string
          format: uuid
          description: ID of the album (nullable)
        duration:
          type: integer
          description: Duration of the track in seconds
      required:
        - name
        - duration

    FavoritesResponse:
      type: object
      properties:
        artists:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
        albums:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              title:
                type: string
        tracks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              name:
                type: string
